name: conspire
on:
  push:
    paths-ignore:
      - '*.md'
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  OUTPUT: x86_64
  TARGET: x86_64-linux-musl

jobs:
  semantic-release:
    name: ü§ñ Semantic release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic-release.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic-release.outputs.new_release_version }}
    if: ${{ github.ref_name == 'master' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic-release
        with:
          extra_plugins: |
            @semantic-release/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  gcc-musl-build:
    name: üêß Build release
    runs-on: ubuntu-latest
    needs: [semantic-release]
    if: ${{ needs.semantic-release.outputs.new_release_published == 'true' }}
    # strategy:
    #   matrix:
    #     include:
    #       - target: x86_64-linux-musl
    #         output: x86_64
    #       - target: arm-linux-musleabihf
    #         output: arm_hf
    #       - target: riscv64-linux-musl
    #         output: riscv_64
    #       - target: aarch64-linux-musl
    #         output: arm_64
    #   fail-fast: true
    # env:
    #   TARGET: ${{ matrix.target }}
    #   OUTPUT: ${{ matrix.output }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
      - name: Install dyne muscle
        run: |
          curl -L "https://files.dyne.org/?file=musl/dyne-gcc-musl-${OUTPUT}.tar.xz" | sudo tar -C /opt -xJf -
      - name: Build conspire
        run: |
          make
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ env.OUTPUT }}
          path: |
            conspire-${{ env.OUTPUT }}

  draft-binary-release:
    name: üì¶ Upload release
    needs: [semantic-release, gcc-musl-build]
    runs-on: ubuntu-latest
    steps:
      - name: download binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: |
            upload
      - name: show directory structure
        run: tree -dL 3
      - name: compute sha256 hash checksums
        run: |
          mkdir -p upload/checksums
          find upload -type f -exec sha256sum {} \; | awk '{ split($2, a, "/"); print $1, a[length(a)] }' | tee upload/checksums/SHA256SUMS.txt
      - name: upload releases to files.dyne.org
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.FILES_SSH_HOST }}
          username: ${{ secrets.FILES_SSH_USER }}
          key: ${{ secrets.FILES_SSH_KEY }}
          port: ${{ secrets.FILES_SSH_PORT }}
          # scp-drone uploads dirs if wildcards are in them, so here
          # we need to list uploaded files one by one.
          source: |
            upload/release-${{ env.OUTPUT }}/conspire-${{ env.OUTPUT }},
            upload/checksums/SHA256SUMS.txt
          target: |
            /srv/ftp/conspire
          strip_components: 2
          overwrite: true
      - name: relase all binary artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            upload/release-*/*
            upload/checksums/SHA256SUMS.txt
          tag_name: ${{ needs.semantic-release.outputs.new_release_version }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true

  remove-tag-on-fail:
    name: üßª Remove tag on fail
    needs: [semantic-release, gcc-musl-build]
    runs-on: ubuntu-latest
    if: ${{ (failure() || cancelled()) && needs.semantic-release.outputs.new_release_published == 'True' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Remove tag
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: ${{ needs.semantic-release.outputs.new_release_version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: false
          repo: dyne/conspire
